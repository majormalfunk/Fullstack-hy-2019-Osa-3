{"version":3,"sources":["services/persons.js","components/Notification.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/FilterForm.js","components/App.js","index.js"],"names":["baseURL","services_persons","axios","get","then","response","data","newObject","post","id","put","concat","delete","Notification","props","message","class","react_default","a","createElement","className","Person","person","name","number","onClick","doRemove","Persons","personsToShow","persons","filter","toUpperCase","includes","nameFilter","Fragment","map","components_Person","key","handleRemoving","PersonForm","onSubmit","addName","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","FilterForm","handleFiltering","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","notificationMessage","setNotificationMessage","_useState11","_useState12","notificationClass","setNotificationClass","useEffect","personService","initialPersons","components_FilterForm","event","target","components_Notification","components_PersonForm","preventDefault","some","updatee","window","confirm","updated","p","setTimeout","catch","error","created","components_Persons","what","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f8ddc3b1.chunk.js","sourcesContent":["import axios from 'axios'\n//const baseURL = 'http://localhost:3001/api/persons'\nconst baseURL = 'https://aqueous-depths-57388.herokuapp.com/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseURL)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseURL, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseURL}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseURL}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove}","import React from 'react'\n\nconst Notification = (props) => {\n\n  if (props.message !== null && props.message !== '') {\n    if (props.class === \"error\") {\n      return (\n        <div className=\"error\">{props.message}</div>\n      )\n    } else {\n      return (\n        <div className=\"success\">{props.message}</div>\n      )\n    }\n  } else {\n    return null\n  }\n\n}\n\nexport default Notification","import React from 'react'\n\nconst Person = (props) => {\n\n  return (\n    <tr>\n      <td>{props.person.name}</td>\n      <td>{props.person.number}</td>\n      <td>\n        <button onClick={() => props.doRemove(props.person.id, props.person.name)}>\n          Poista\n          </button>\n      </td>\n    </tr>\n  )\n\n}\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = (props) => {\n\n  const personsToShow = props.persons.filter(person =>\n    person.name.toUpperCase().includes(props.nameFilter.toUpperCase()))\n\n  const rows = () => personsToShow.map(person =>\n    <Person\n      key={person.id}\n      person={person}\n      doRemove={props.doRemove}\n      handleRemoving={props.handleRemoving}\n    />\n  )\n  return (\n    <>{rows()}</>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = (props) => {\n\n  return (\n    <form onSubmit={props.addName}>\n      <table>\n        <tbody>\n          <tr>\n            <td>Nimi:</td>\n            <td>\n              <input value={props.newName} onChange={props.handleNameChange} />\n            </td>\n          </tr>\n          <tr>\n            <td>Numero:</td>\n            <td>\n              <input value={props.newNumber} onChange={props.handleNumberChange} />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div>\n        <button type=\"submit\">lisää</button>\n      </div>\n    </form>\n  )\n\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst FilterForm = (props) => {\n\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <td>Rajaa:</td>\n          <td>\n            <input value={props.nameFilter} onChange={props.handleFiltering} />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n\n}\n\nexport default FilterForm\n","import React, { useState, useEffect } from 'react'\nimport personService from '../services/persons'\nimport Notification from './Notification'\nimport Persons from './Persons'\nimport PersonForm from './PersonForm'\nimport FilterForm from './FilterForm'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameFilter, setFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState('')\n  const [notificationClass, setNotificationClass] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    //console.log(\"Name.\", event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    //console.log(\"Number:\", event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFiltering = (event) => {\n    //console.log(\"Filter:\", event.target.value)\n    setFilter(event.target.value)\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    if (persons.some(person => person.name.toUpperCase() === newName.toUpperCase())) {\n      var updatee = (persons.filter(person => person.name.toUpperCase() === newName.toUpperCase()))[0]\n      if (window.confirm(`${newName} on jo luettelossa. Korvataanko vanha numero?`)) {\n        updatee.number = newNumber\n\n        personService\n          .update(updatee.id, updatee)\n          .then(updated => {\n            setPersons(persons.map(p => p.id !== updatee.id ? p : updated))\n            setNewName('')\n            setNewNumber('')\n            setNotificationMessage(`Henkilön ${updated.name} numeroksi muutettiin ${updated.number}`)\n            setNotificationClass(\"success\")\n            setTimeout(() => { setNotificationMessage(null) }, 5000)\n          })\n          .catch(error => {\n            setPersons(persons.filter(p => p.id !== updatee.id))\n            setNotificationMessage(`Henkilö ${updatee.name} oli jo poistettu`)\n            setNotificationClass(\"error\")\n            setTimeout(() => { setNotificationMessage(null) }, 5000)\n          })\n\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n\n      personService\n        .create(personObject)\n        .then(created => {\n          setPersons(persons.concat(created))\n          setNewName('')\n          setNewNumber('')\n          setNotificationMessage(`Henkilö ${created.name} lisättiin numerolla ${created.number}`)\n          setNotificationClass(\"success\")\n          setTimeout(() => { setNotificationMessage(null) }, 5000)\n        })\n        .catch(error => {\n          setNotificationMessage(`Henkilön ${newName} lisääminen ei onnistunut`)\n          setNotificationClass(\"error\")\n          setTimeout(() => { setNotificationMessage(null) }, 5000)\n        })\n    }\n  }\n\n  const doRemove = (id, name) => {\n    if (window.confirm(`Poistetaanko ${name}?`)) {\n      personService\n        .remove(id)\n        .then(what => {\n          setPersons(persons.filter(p => p.id !== id))\n          setNotificationMessage(`Henkilö ${name} poistettiin`)\n          setNotificationClass(\"success\")\n          setTimeout(() => { setNotificationMessage(null) }, 5000)\n        })\n        .catch(error => {\n          setNotificationMessage(`Henkilön ${name} poistaminen ei onnistunut`)\n          setNotificationClass(\"error\")\n          setTimeout(() => { setNotificationMessage(null) }, 5000)\n        })\n\n    }\n  }\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <FilterForm\n        nameFilter={nameFilter}\n        handleFiltering={handleFiltering}\n      />\n      <Notification message={notificationMessage} class={notificationClass} />\n      <h3>Lisää uusi</h3>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numerot</h3>\n      <table>\n        <tbody>\n          <Persons\n            persons={persons}\n            nameFilter={nameFilter}\n            doRemove={doRemove} />\n        </tbody>\n      </table>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}